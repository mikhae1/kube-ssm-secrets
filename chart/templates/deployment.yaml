apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-ssm-secrets.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kube-ssm-secrets.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "kube-ssm-secrets.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kube-ssm-secrets.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kube-ssm-secrets.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            {{- if .Values.leaderElect }}
            - --leader-elect=true
            {{- end }}
            {{- if .Values.refreshInterval }}
            - --refresh-interval={{ .Values.refreshInterval }}
            {{- end }}
            {{- range $key, $value := .Values.extraArgs }}
              {{- if $value }}
            - --{{ $key }}={{ $value }}
              {{- else }}
            - --{{ $key }}
              {{- end }}
            {{- end }}
          env:
            # AWS environment variables
            {{- if .Values.aws.region }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.aws.region }}
            {{- end }}
            {{- if .Values.aws.roleArn }}
            - name: AWS_CONFIG_FILE
              value: {{ .Values.aws.credentials.mountPath }}/config
            {{- end }}
            {{- if and .Values.aws.credentials.secretKey .Values.aws.credentials.accessKey }}
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: {{ .Values.aws.credentials.mountPath }}/credentials
            {{- end }}
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # AWS mountPath
            {{- if and .Values.aws.credentials.secretKey .Values.aws.credentials.accessKey }}
            - name: aws-credentials
              mountPath: {{ .Values.aws.credentials.mountPath }}
              readOnly: true
            {{- end }}
      volumes:
        {{- if and .Values.aws.credentials.secretKey .Values.aws.credentials.accessKey }}
        - name: aws-credentials
          secret:
            secretName: {{ template "kube-ssm-secrets.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
